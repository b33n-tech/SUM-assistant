import streamlit as st
import pandas as pd
import ollama
import textwrap

st.title("üì• Analyse de projets entrants (Ollama + llama3.2)")

# --- Upload du fichier ---
uploaded_file = st.file_uploader("T√©l√©versez un fichier .xlsx contenant les projets", type=["xlsx"])

if uploaded_file:
    df = pd.read_excel(uploaded_file)
    df.fillna("", inplace=True)

    # --- S√©lection du projet √† analyser ---
    nom_projet = st.selectbox("S√©lectionnez un projet √† analyser :", df["Nom du projet"].unique())
    projet = df[df["Nom du projet"] == nom_projet].iloc[0]

    # --- Prompt structur√© pour l'analyse par LLM ---
    prompt = f"""
Tu es un expert en incubation, strat√©gie early-stage et √©valuation de projets innovants. Tu vas analyser une fiche de projet transmise par un porteur. R√©dige une analyse experte en 4 parties distinctes, claire, concise, mais rigoureuse.

---

üìå **1. Analyse critique structur√©e (forces/faiblesses/leviers)**
Analyse les forces cl√©s du projet (probl√©matique, solution, diff√©renciation, √©quipe, etc.), les faiblesses potentielles (march√©, focus, mod√®le √©conomique, etc.), et les leviers ou opportunit√©s visibles.

---

üîç **2. Analyse approfondie par composante**
√âvalue les aspects suivants :
- March√© et segments : clart√©, accessibilit√©, maturit√©
- Probl√©matique et solution : pertinence, nouveaut√©, ad√©quation
- Mod√®le √©conomique et strat√©gie : viabilit√©, r√©alisme, scalabilit√©
- Maturit√© : √©tat d'avancement, documents existants, pr√©visionnel
- Ressources humaines : √©quipe, implication, comp√©tences
- √âcosyst√®me : int√©gration, soutiens, partenariats

---

üìä **3. Scoring d‚Äôimpact potentiel**
Attribue un score sur 10 (ou en niveaux : faible / mod√©r√© / fort) pour :
- Impact soci√©tal ou environnemental
- Potentiel √©conomique (cr√©ation de valeur)
- Potentiel d‚Äôinnovation
- Capacit√© √† r√©ussir un accompagnement structurant

---

‚ö†Ô∏è **4. Risques, fragilit√©s, zones d'ombre**
Identifie les points de vigilance, risques implicites, incoh√©rences, ou manques d‚Äôinformations dans la fiche. Mentionne ce qui m√©riterait d‚Äô√™tre clarifi√© ou investigu√© lors d‚Äôun premier √©change.

---

üìÑ **Fiche projet √† analyser :**

- Nom : {projet['Nom du projet']}
- Pitch : {projet['Votre projet en 1 phrase']}
- Description : {projet['Description du projet']}
- Avancement : {projet["√âtat d'avancement (id√©e, prototype, ...)"]}
- Mod√®le √©conomique : {projet['Mod√®le √©conomique & strat√©gie']}
- March√©s : {projet['March√©(s) d\'application(s)']}
- Probl√©matiques : {projet['Probl√©matiques adress√©es']}
- Segments clients : {projet['Segments clients']}
- Concurrents ou alternatives : {projet['Solutions existantes/alternatives']}
- Diff√©renciation : {projet['Atouts diff√©renciants']}
- Besoins d'accompagnement : {projet["Besoins d'accompagnement identifi√©s"]}
- Situation professionnelle du porteur : {projet["Situation professionnelle"]}
- Implantation Grand Est : {projet["Projet implant√© en R√©gion Grand Est ?"]}
"""

    # --- Affichage r√©sum√© de la fiche projet ---
    st.subheader("üóÇÔ∏è Fiche projet r√©sum√©e")
    resume_df = pd.DataFrame({
        "Cl√©": ["Pitch", "March√©", "Mod√®le √©co", "Clients", "√âtat d‚Äôavancement"],
        "Valeur": [
            projet['Votre projet en 1 phrase'],
            projet['March√©(s) d\'application(s)'],
            projet['Mod√®le √©conomique & strat√©gie'],
            projet['Segments clients'],
            projet["√âtat d'avancement (id√©e, prototype, ...)"]
        ]
    })
    st.dataframe(resume_df, use_container_width=True)

    # --- Bouton de g√©n√©ration via llama3 ---
    st.subheader("üîç Analyse g√©n√©r√©e par llama3.2")
    if st.button("Lancer l'analyse du projet avec Ollama"):
        with st.spinner("Analyse en cours..."):
            result = ollama.chat(model="llama3", messages=[{"role": "user", "content": prompt}])
            reponse = result["message"]["content"]
            st.markdown(reponse)

            # --- Extraction des scores si pr√©sents ---
            import re
            score_regex = re.findall(r"([A-Za-z√©√†√π√®√™√ß ]+)\s*[:\-‚Äì]\s*(\d{1,2})/10", reponse)
            if score_regex:
                st.subheader("üìä Scoring d‚Äôimpact potentiel")
                for titre, score in score_regex:
                    st.metric(titre.strip(), f"{score}/10")

    # --- Footer ---
    st.markdown("---")
    st.caption("üí° Analyse automatique pr√©liminaire ‚Äî √† confronter avec un √©change r√©el avec le porteur.")

else:
    st.info("Veuillez importer un fichier Excel (.xlsx) contenant les projets pour commencer.")
